{"version":3,"file":"static/webpack/static\\development\\pages\\editDevice.js.ae093adaf241e5100afa.hot-update.js","sources":["webpack:///./pages/editDevice.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../components/layout';\r\nimport DeviceGridColumn from '../components/deviceGridColumn';\r\nimport { Form, Header, Icon, Input, Item, Button, Label, Grid } from 'semantic-ui-react';\r\n\r\nexport default class editDevice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            files: []\r\n        }\r\n\r\n        this.handleFileChange   = this.handleFileChange.bind(this);\r\n\r\n    }\r\n\r\n    static getInitialProps({ query: { id } }) {\r\n        return { id: id }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.id)\r\n        fetch(`/api/getDevice/${this.props.id}`)\r\n            .then(res => res.json())\r\n            .then(user => this.setState({ data: user.resp[0] }));\r\n    }\r\n\r\n    handleFileChange(file, name) {\r\n        var files = this.state.files;\r\n        var data = this.state.data;\r\n\r\n        switch(name) {\r\n            case 'Dieplot':\r\n                data.dieplotUpdateCount? data.dieplotUpdateCount = data.dieplotUpdateCount++:  data.dieplotUpdateCount = 1;\r\n                data.dieplotLastUpdateDate = new Date();\r\n                data.dieplot = file.name;\r\n                break;\r\n            case 'Pinout':\r\n            data.pinoutUpdateCount? data.pinoutUpdateCount = data.pinoutUpdateCount++:  data.pinoutUpdateCount = 1;\r\n            data.pinoutLastUpdateDate = new Date();\r\n                data.pinout = file.name;\r\n                break;\r\n            case 'Database':\r\n            data.databaseUpdateCount? data.databaseUpdateCount = data.databaseUpdateCount++:  data.databaseUpdateCount = 1;\r\n            data.databaseLastUpdateDate = new Date();\r\n                data.database = file.name;\r\n                break;\r\n            case 'Assura':\r\n            data.assuraUpdateCount? data.assuraUpdateCount = data.assuraUpdateCount++:  data.assuraUpdateCount = 1;\r\n            data.assuraLastUpdateDate = new Date();\r\n                data.assura = file.name;\r\n                break;\r\n            case 'Datasheet':\r\n            data.datasheetUpdateCount? data.datasheetUpdateCount = data.datasheetUpdateCount++:  data.datasheetUpdateCount = 1;\r\n            data.datasheetLastUpdateDate = new Date();\r\n                data.datasheet = file.name;\r\n                break;\r\n            case 'EVM':\r\n            data.evmUpdateCount? data.evmUpdateCount = data.evmUpdateCount++:  data.evmUpdateCount = 1;\r\n            data.evmLastUpdateDate = new Date();\r\n                data.evm = file.name;\r\n                break;\r\n        }\r\n        this.setState({\r\n            data: data,\r\n            files: [...this.state.files, file]\r\n        })\r\n\r\n        console.log(data)\r\n        console.log(files)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <Header as='h1' textAlign='center'>\r\n                        <Icon name='microchip' />\r\n                        {this.state.data.name}\r\n                    </Header>\r\n                    <Grid columns='equal' divided>\r\n                        <Grid.Row>\r\n                                <DeviceGridColumn\r\n                                    name='Dieplot'\r\n                                    file={this.state.data.dieplot}\r\n                                    count={this.state.data.dieplotUpdateCount}\r\n                                    date={this.state.data.dieplotLastUpdateDate}\r\n                                    onChange={this.handleFileChange}/>\r\n                                <DeviceGridColumn\r\n                                    name='Pinout'\r\n                                    file={this.state.data.pinout}\r\n                                    count={this.state.data.pinoutUpdateCount}\r\n                                    date={this.state.data.pinoutLastUpdateDate}\r\n                                    onChange={this.handleFileChange}/>\r\n                                <DeviceGridColumn\r\n                                    name='Database'\r\n                                    file={this.state.data.database}\r\n                                    count={this.state.data.databaseUpdateCount}\r\n                                    date={this.state.data.databaseLastUpdateDate}\r\n                                    onChange={this.handleFileChange}/>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <DeviceGridColumn\r\n                                    name='Assura'\r\n                                    file={this.state.data.assura}\r\n                                    count={this.state.data.assuraUpdateCount}\r\n                                    date={this.state.data.assuraLastUpdateDate}\r\n                                    onChange={this.handleFileChange}/>\r\n                            <DeviceGridColumn\r\n                                    name='Datasheet'\r\n                                    file={this.state.data.datasheet}\r\n                                    count={this.state.data.datasheetUpdateCount}\r\n                                    date={this.state.data.datasheetLastUpdateDate}\r\n                                    onChange={this.handleFileChange}/>\r\n                            <DeviceGridColumn\r\n                                    name='EVM'\r\n                                    file={this.state.data.evm}\r\n                                    count={this.state.data.evmUpdateCount}\r\n                                    date={this.state.data.evmLastUpdateDate}\r\n                                    onChange={this.handleFileChange}/>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAPA;AASA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA9BA;AACA;AA+BA;AACA;AACA;AAFA;AAKA;AACA;AACA;;;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAWA;;;AA7GA;AAAA;AACA;AAAA;AAAA;AACA;;;;AAdA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}