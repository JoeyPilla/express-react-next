{"version":3,"file":"static/webpack/static/development/pages/editDevice.js.0389766ec32f8310e262.hot-update.js","sources":["webpack:///./pages/editDevice.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/layout';\nimport DeviceGridColumn from '../components/deviceGridColumn';\nimport { Form, Header, Icon, Input, Item, Button, Label, Grid } from 'semantic-ui-react';\nimport { runInThisContext } from 'vm';\nimport axios from 'axios';\nimport DropZone from '../components/dropZone';\n\nexport default class editDevice extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            files: []\n        }\n\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFileDrops = this.handleFileDrops.bind(this);\n    }\n\n    static getInitialProps({ query: { id } }) {\n        return { id: id }\n    }\n\n    componentDidMount() {\n        console.log(this.props.id)\n        fetch(`/api/getDevice/${this.props.id}`)\n            .then(res => res.json())\n            .then(user => this.setState({ data: user.resp[0] }));\n    }\n\n    handleFileChange(file, name) {\n        var files = this.state.files;\n        var data = this.state.data;\n\n        switch (name) {\n            case 'Dieplot':\n                data.dieplotUpdateCount ? data.dieplotUpdateCount = data.dieplotUpdateCount++ : data.dieplotUpdateCount = 1;\n                data.dieplotLastUpdateDate = new Date();\n                data.dieplot = file.name;\n                break;\n            case 'Pinout':\n                data.pinoutUpdateCount ? data.pinoutUpdateCount = data.pinoutUpdateCount++ : data.pinoutUpdateCount = 1;\n                data.pinoutLastUpdateDate = new Date();\n                data.pinout = file.name;\n                break;\n            case 'Database':\n                data.databaseUpdateCount ? data.databaseUpdateCount = data.databaseUpdateCount++ : data.databaseUpdateCount = 1;\n                data.databaseLastUpdateDate = new Date();\n                data.database = file.name;\n                break;\n            case 'Assura':\n                data.assuraUpdateCount ? data.assuraUpdateCount = data.assuraUpdateCount++ : data.assuraUpdateCount = 1;\n                data.assuraLastUpdateDate = new Date();\n                data.assura = file.name;\n                break;\n            case 'Datasheet':\n                data.datasheetUpdateCount ? data.datasheetUpdateCount = data.datasheetUpdateCount++ : data.datasheetUpdateCount = 1;\n                data.datasheetLastUpdateDate = new Date();\n                data.datasheet = file.name;\n                break;\n            case 'EVM':\n                data.evmUpdateCount ? data.evmUpdateCount = data.evmUpdateCount++ : data.evmUpdateCount = 1;\n                data.evmLastUpdateDate = new Date();\n                data.evm = file.name;\n                break;\n        }\n        this.setState({\n            data: data,\n            files: [...this.state.files, file]\n        })\n    }\n\n    handleFileDrops(files) {\n        Array.from(files).forEach(file => {\n            console.log(file);\n        });\n    }\n\n\n    handleSubmit(e) {\n\n        e.preventDefault();\n        \n        var data = this.state.data;\n        console.log('data', data)\n        var url = ' http://localhost:3000/api/updateDevice';\n        axios.post(url,data)\n        .then(response=>console.log(response))\n        .catch(e=>console.log(e))\n    }\n\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <Header as='h1' textAlign='center'>\n                        <Icon name='microchip' />\n                        {this.state.data.name}\n                    </Header>\n                    <Grid columns='equal' divided>\n                        <Grid.Row>\n                            <DeviceGridColumn\n                                name='Dieplot'\n                                file={this.state.data.dieplot}\n                                count={this.state.data.dieplotUpdateCount}\n                                date={this.state.data.dieplotLastUpdateDate}\n                                onChange={this.handleFileChange} />\n                            <DeviceGridColumn\n                                name='Pinout'\n                                file={this.state.data.pinout}\n                                count={this.state.data.pinoutUpdateCount}\n                                date={this.state.data.pinoutLastUpdateDate}\n                                onChange={this.handleFileChange} />\n                            <DeviceGridColumn\n                                name='Database'\n                                file={this.state.data.database}\n                                count={this.state.data.databaseUpdateCount}\n                                date={this.state.data.databaseLastUpdateDate}\n                                onChange={this.handleFileChange} />\n                        </Grid.Row>\n                        <Grid.Row>\n                            <DeviceGridColumn\n                                name='Assura'\n                                file={this.state.data.assura}\n                                count={this.state.data.assuraUpdateCount}\n                                date={this.state.data.assuraLastUpdateDate}\n                                onChange={this.handleFileChange} />\n                            <DeviceGridColumn\n                                name='Datasheet'\n                                file={this.state.data.datasheet}\n                                count={this.state.data.datasheetUpdateCount}\n                                date={this.state.data.datasheetLastUpdateDate}\n                                onChange={this.handleFileChange} />\n                            <DeviceGridColumn\n                                name='EVM'\n                                file={this.state.data.evm}\n                                count={this.state.data.evmUpdateCount}\n                                date={this.state.data.evmLastUpdateDate}\n                                onChange={this.handleFileChange}/>\n                        </Grid.Row>\n                    </Grid>\n                    <DropZone \n                        onDrop={this.handleFileDrops}\n                    >\n                        <div>\n                            <h1>Drag files here...</h1>\n                        </div>\n                    </DropZone>\n                    <Button type='submit' onClick={this.handleSubmit}>Submit</Button>\n                </Layout>\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AATA;AAUA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA9BA;AACA;AA+BA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AADA;AAOA;AAAA;AAAA;AAIA;;;AArIA;AAAA;AACA;AAAA;AAAA;AACA;;;;AAfA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}